<?php

/**
 * @file
 * Contains discussions_email.module..
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\discussions\Entity\Discussion;
use Drupal\user\Entity\User;

/**
 * Implements hook_help().
 */
function discussions_email_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the discussions_email module.
    case 'help.page.discussions_email':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Create discussions by sending emails.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_entity_insert().
 */
function discussions_email_group_type_insert(EntityInterface $entity) {
  // TODO: Add discussions_email_address field automatically.
}

/**
 * Implements hook_entity_insert().
 */
function discussions_email_group_content_type_insert(EntityInterface $entity) {
  /** @var \Drupal\group\Entity\GroupContentType $entity */
  if ($entity->getContentPlugin() == 'group_membership') {
    // TODO: Add discussions_email_frequency field automatically.
  }
}

/**
 * Implements hook_entity_insert().
 */
function discussions_email_comment_insert(EntityInterface $entity) {
  /** @var \Drupal\comment\Entity\Comment $entity */

  // Only send email if comment is a reply to a discussion.
  if ($entity->bundle() != 'discussions_reply') {
    return;
  }

  // Load comment author user.
  $user = User::load($entity->get('uid')->getValue());

  // Load parent discussion.
  $discussion = $entity->getCommentedEntity();

  /** @var \Drupal\discussions\GroupDiscussionService $group_discussion_service */
  $group_discussion_service = \Drupal::service('discussions.group_discussion');

  // Load group containing parent discussion.
  $group = $group_discussion_service->getDiscussionGroup($discussion->id());

  // TODO: Get group members.

  // TODO: Only send to comment author if configured in group settings.

  // TODO: Get current discussions email plugin.

  // TODO: Send email via plugin.
}
